#include <stdio.h>
#include <strings.h>
#include <stdlib.h>


typedef struct    s_list
{
    void            *content;
    struct    s_list    *next;
}                    t_list;
int        ft_lstsize(t_list *lst)
{
    int    i;
    
    i = 0;
    while (lst != NULL)
    {
        i++;
        lst = lst->next;
    }
    return (i);
}
void    ft_lstadd_front(t_list **lst, t_list *new)
{
    new->next = *lst;
    *lst = new;
}
t_list    *ft_lstnew(void *content)
{
    t_list    *ptr;

    ptr = malloc(sizeof(t_list));
    if (ptr == NULL)
        return (NULL);
    ptr->content = content;
    ptr->next = NULL;
    return (ptr);
}
t_list    *ft_lstlast(t_list *lst)
{
    int    i;
    int    size;
    
    i = 0;
    size = ft_lstsize(lst)-1;
    while (i < size)
    {
        lst = lst->next;
        i++;
    }
    return (lst);
}
void    ft_lstadd_back(t_list **lst, t_list *new)
{
    t_list    *tmp;

    tmp = ft_lstlast(*lst);
    if (tmp->content == NULL)
        tmp->content = new;
    tmp->next = new;
}
int main() {
  char    g[15] = "Achim";
  char    w[8] = "Doush";
  char    p[8] = "Kevin";
  char    u[8] = "Jan";
    t_list *head;
  //  head = ft_lstnew(w);
  //  ft_lstadd_front(&head, ft_lstnew(g));
   // ft_lstadd_front(&head, ft_lstnew(p));
    head = ft_lstadd_back(&head, ft_lstnew(u));
    t_list *tmp = head;
    while (tmp != NULL)
    {
        printf("String is:%s\n", tmp->content);
        tmp = tmp->next;
    }
    printf("Listsize is:%d\n", ft_lstsize(head));
    printf("last Element is:%s\n", ft_lstlast(head)->content);
    printf("Listsize is:%d\n", ft_lstsize(head));
  return 0;
}